// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VaultAndStrategy extends ethereum.Event {
  get params(): VaultAndStrategy__Params {
    return new VaultAndStrategy__Params(this);
  }
}

export class VaultAndStrategy__Params {
  _event: VaultAndStrategy;

  constructor(event: VaultAndStrategy) {
    this._event = event;
  }

  get deployer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultType(): string {
    return this._event.parameters[1].value.toString();
  }

  get strategyId(): string {
    return this._event.parameters[2].value.toString();
  }

  get vault(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get strategy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[5].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[6].value.toString();
  }

  get assets(): Array<Address> {
    return this._event.parameters[7].value.toAddressArray();
  }

  get deploymentKey(): Bytes {
    return this._event.parameters[8].value.toBytes();
  }

  get vaultManagerTokenId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class StabilityDaoProxy extends ethereum.SmartContract {
  static bind(address: Address): StabilityDaoProxy {
    return new StabilityDaoProxy("StabilityDaoProxy", address);
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class InitProxyCall extends ethereum.Call {
  get inputs(): InitProxyCall__Inputs {
    return new InitProxyCall__Inputs(this);
  }

  get outputs(): InitProxyCall__Outputs {
    return new InitProxyCall__Outputs(this);
  }
}

export class InitProxyCall__Inputs {
  _call: InitProxyCall;

  constructor(call: InitProxyCall) {
    this._call = call;
  }

  get logic_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitProxyCall__Outputs {
  _call: InitProxyCall;

  constructor(call: InitProxyCall) {
    this._call = call;
  }
}

export class UpgradeCall extends ethereum.Call {
  get inputs(): UpgradeCall__Inputs {
    return new UpgradeCall__Inputs(this);
  }

  get outputs(): UpgradeCall__Outputs {
    return new UpgradeCall__Outputs(this);
  }
}

export class UpgradeCall__Inputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }

  get _newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeCall__Outputs {
  _call: UpgradeCall;

  constructor(call: UpgradeCall) {
    this._call = call;
  }
}
